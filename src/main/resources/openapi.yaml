swagger: "2.0"
info:
  description: "Schachfish is a chess engine for querying moves and board evaluations"
  version: "1.0.0"
  title: "Schachfish-Api"
host: "petstore.swagger.io"
basePath: "/api"
tags:
- name: "move"
  description: "legal moves"
- name: "evaluation"
  description: "value of board state"
schemes:
- "https"
- "http"
paths:
  /moves:
    post:
      tags:
      - "move"
      summary: "get list of legal moves from board state"
      operationId: "getLegalMovesFromBoardState"
      parameters:
      - in: "body"
        name: "boardState"
        description: "list of pieces and positions / castling information"
        required: true
        schema: 
          $ref: "#/definitions/BoardStateDto"
      responses:
        "200":
          description: "list of legal moves"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/LegalMoveDto"
  /evaluate:
    post:
      tags:
      - "evaluation"
      summary: "get an evaluation of the board"
      operationId: "getBoardEvaluation"
      parameters:
      - in: "body"
        name: "boardState"
        description: "list of pieces and positions / castling information"
        required: true
        schema: 
          $ref: "#/definitions/BoardStateDto"
      responses:
        "200":
          description: "board evaluation"
          schema:
            $ref: "#/definitions/BoardEvaluationDto"

definitions:
  BoardStateDto:
    type: "object"
    properties:
      blackStatus:
        $ref: "#/definitions/ColourStatusDto"
      whiteStatus:
        $ref: "#/definitions/ColourStatusDto"
  ColourStatusDto:
    type: "object"
    properties:
      canCastleKingSide:
        type: "boolean"
      canCastleQueenSide:
        type: "boolean"
      enPassant:
        type: "object"
        properties:
          possible:
            type: "boolean"
          position:
            $ref: "#/definitions/PositionDto"
      Pieces:
        type: "array"
        items:
          $ref: "#/definitions/PieceDto"
  LegalMoveDto:
    type: "object"
    properties:
      moves:
        type: "array"
        items:
          $ref: "#/definitions/MoveDto"
  BoardEvaluationDto:
    type: "object"
    properties:
      score:
        type: "integer"
        format: "int64"
  PieceDto:
    type: "object"
    properties:
      position:
        $ref: "#/definitions/PositionDto"
      name:
        $ref: "#/definitions/PieceNameDto"
  PieceNameDto:
    type: "string"
    enum:
    - "King"
    - "Queen"
    - "Rook"
    - "Bishop"
    - "Knight"
    - "Pawn"
  PositionDto:
    type: "object"
    properties:
      x:
        type: "integer"
        format: "int64"
      y:
        type: "integer"
        format: "int64"
  MoveDto:
    type: "object"
    properties:
      to:
        $ref: "#/definitions/PositionDto"
      from:
        $ref: "#/definitions/PositionDto"
